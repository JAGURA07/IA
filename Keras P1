{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOVxfBtD7AQtnnVtPGNykLy"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"MyqOb3BE4dZM","executionInfo":{"status":"ok","timestamp":1675176722163,"user_tz":360,"elapsed":10606,"user":{"displayName":"JAGURA","userId":"01920608359559747946"}}},"outputs":[],"source":["import numpy as np\n","from keras.models import Sequential\n","from keras.layers import Dense\n","from keras.losses import SparseCategoricalCrossentropy\n","import keras.optimizers as ko\n","from IPython.core.display import display, HTML\n","\n","from sklearn.datasets import load_breast_cancer\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler"]},{"cell_type":"code","source":["bCancer = load_breast_cancer()\n","X = bCancer['data']\n","Y = bCancer['target']\n","names = bCancer['target_names']\n","feature_names = bCancer['feature_names']\n","print(names)\n","print(feature_names)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ol3oi84Y4mjN","executionInfo":{"status":"ok","timestamp":1675176722163,"user_tz":360,"elapsed":4,"user":{"displayName":"JAGURA","userId":"01920608359559747946"}},"outputId":"57ace129-ec3c-4944-b129-df8fe65830a2"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["['malignant' 'benign']\n","['mean radius' 'mean texture' 'mean perimeter' 'mean area'\n"," 'mean smoothness' 'mean compactness' 'mean concavity'\n"," 'mean concave points' 'mean symmetry' 'mean fractal dimension'\n"," 'radius error' 'texture error' 'perimeter error' 'area error'\n"," 'smoothness error' 'compactness error' 'concavity error'\n"," 'concave points error' 'symmetry error' 'fractal dimension error'\n"," 'worst radius' 'worst texture' 'worst perimeter' 'worst area'\n"," 'worst smoothness' 'worst compactness' 'worst concavity'\n"," 'worst concave points' 'worst symmetry' 'worst fractal dimension']\n"]}]},{"cell_type":"code","source":["scaler = StandardScaler()\n","X_scaled = scaler.fit_transform(X)"],"metadata":{"id":"4wrp4D3b4mmi","executionInfo":{"status":"ok","timestamp":1675176722163,"user_tz":360,"elapsed":2,"user":{"displayName":"JAGURA","userId":"01920608359559747946"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, Y_train, Y_test = train_test_split(\n","    X_scaled, Y, test_size=0.2, random_state=2)"],"metadata":{"id":"NzGdQUdo4mqM","executionInfo":{"status":"ok","timestamp":1675176722359,"user_tz":360,"elapsed":197,"user":{"displayName":"JAGURA","userId":"01920608359559747946"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["l_r = 0.05         \n","nn = [13, 60, 60, 60, 3]"],"metadata":{"id":"npKO72YI4mz2","executionInfo":{"status":"ok","timestamp":1675176722359,"user_tz":360,"elapsed":3,"user":{"displayName":"JAGURA","userId":"01920608359559747946"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["model = Sequential()"],"metadata":{"id":"z_FCBSXO4m2f","executionInfo":{"status":"ok","timestamp":1675176722553,"user_tz":360,"elapsed":196,"user":{"displayName":"JAGURA","userId":"01920608359559747946"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Capa 1\n","l1 = model.add(Dense(nn[1], activation='relu'))\n","# Capa 2\n","l2 = model.add(Dense(nn[2], activation='relu'))\n","# Capa 3\n","l2 = model.add(Dense(nn[3], activation='PReLU'))\n","# Capa 4\n","l3 = model.add(Dense(nn[4], activation='softmax'))"],"metadata":{"id":"hMdBPKU-4m5T","executionInfo":{"status":"ok","timestamp":1675176722553,"user_tz":360,"elapsed":3,"user":{"displayName":"JAGURA","userId":"01920608359559747946"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["model.compile(optimizer=ko.adam_v2.Adam(learning_rate=l_r), loss=SparseCategoricalCrossentropy(from_logits=True), metrics=['acc']) \n","model.fit(X_train, Y_train.reshape((-1,1)), epochs=10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MxPmKqdG4m8Y","executionInfo":{"status":"ok","timestamp":1675176727891,"user_tz":360,"elapsed":5340,"user":{"displayName":"JAGURA","userId":"01920608359559747946"}},"outputId":"3df07da9-6599-4385-8438-b8d03d7d3b69"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/tensorflow/python/util/dispatch.py:1082: UserWarning: \"`sparse_categorical_crossentropy` received `from_logits=True`, but the `output` argument was produced by a sigmoid or softmax activation and thus does not represent logits. Was this intended?\"\n","  return dispatch_target(*args, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["15/15 [==============================] - 2s 18ms/step - loss: 1.6108 - acc: 0.8593\n","Epoch 2/10\n","15/15 [==============================] - 0s 18ms/step - loss: 0.8137 - acc: 0.9231\n","Epoch 3/10\n","15/15 [==============================] - 0s 15ms/step - loss: 0.9378 - acc: 0.9451\n","Epoch 4/10\n","15/15 [==============================] - 0s 15ms/step - loss: 1.2858 - acc: 0.9604\n","Epoch 5/10\n","15/15 [==============================] - 0s 6ms/step - loss: 0.2864 - acc: 0.9736\n","Epoch 6/10\n","15/15 [==============================] - 0s 13ms/step - loss: 0.6411 - acc: 0.9648\n","Epoch 7/10\n","15/15 [==============================] - 0s 20ms/step - loss: 0.1040 - acc: 0.9736\n","Epoch 8/10\n","15/15 [==============================] - 0s 6ms/step - loss: 0.1830 - acc: 0.9604\n","Epoch 9/10\n","15/15 [==============================] - 0s 11ms/step - loss: 0.0800 - acc: 0.9868\n","Epoch 10/10\n","15/15 [==============================] - 0s 8ms/step - loss: 0.0585 - acc: 0.9780\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f4136a916a0>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["Y_bar = model.predict(X_test)\n","aux = np.where( Y_bar.round() == 1)\n","Y_pred = aux[:][1]\n","print( Y_pred )\n","print( Y_test )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ixpNXhzt4m_D","executionInfo":{"status":"ok","timestamp":1675176728617,"user_tz":360,"elapsed":727,"user":{"displayName":"JAGURA","userId":"01920608359559747946"}},"outputId":"e41dde10-ac91-4f84-bd46-40f14116c09b"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 0s 10ms/step\n","[1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 1 0 0 1 1\n"," 1 1 1 0 0 1 1 0 1 1 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 1 0 0 1 0 0 0 1 0 0 1 0\n"," 1 0 1 1 1 0 0 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0\n"," 0 0 0]\n","[1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 1 0 0 1 1\n"," 0 1 1 0 0 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 0 0 1 0 0 1 0 0 0 1 0\n"," 1 0 1 1 1 0 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 1 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0\n"," 0 0 0]\n"]}]}]}